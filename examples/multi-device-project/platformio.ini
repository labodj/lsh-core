[platformio]
description = "My custom LSH installation with multiple devices"
default_envs = J1_release

# =================================================================
# |                  COMMON CONFIGURATION                         |
# |   Settings shared across all environments (debug/release)     |
# =================================================================
[common_base]
platform = atmelavr
framework = arduino
board = controllino_maxi

lib_deps =
    labodj/lsh-core

# Add the hardware-specific library here (if needed)
    controllino-plc/CONTROLLINO

# --- BASE SOURCE FILTER ---
# This is the core of the multi-device setup.
# 1. Include (+) all files in the `src` directory (<*>).
# 2. Exclude (-) the entire `configs` directory.
# This compiles `main.cpp` and any other shared source files automatically,
# but ignores all specific device configurations.
src_filter = +<*> -<configs/>

build_unflags = -std=gnu++11
build_flags =
    # Add the 'include' directory to the compiler's search path.
    # This is necessary for the library to find the user's config headers.
    -I include
    -std=c++23

# --- GLOBAL DEFAULT FEATURE FLAGS ---
# Uncomment a line here to enable a feature for ALL devices.
# These flags can be overridden or extended in the device-specific sections below.
default_feature_flags =
	#-D SERIAL_RX_BUFFER_SIZE=256U
	#-D SERIAL_TX_BUFFER_SIZE=128U
	#-D CONFIG_USE_FAST_CLICKABLES
	#-D CONFIG_USE_FAST_ACTUATORS
	#-D CONFIG_USE_FAST_INDICATORS
 	#-D CONFIG_MSG_PACK
	#-D CONFIG_ACTUATOR_DEBOUNCE_TIME_MS=0U
	#-D CONFIG_CLICKABLE_DEBOUNCE_TIME_MS=20U
	#-D CONFIG_CLICKABLE_LONG_CLICK_TIME_MS=400U
	#-D CONFIG_CLICKABLE_SUPER_LONG_CLICK_TIME_MS=1000U
	#-D CONFIG_LCNB_TIMEOUT_MS=1000U
	#-D CONFIG_PING_INTERVAL_MS=10000U
	#-D CONFIG_CONNECTION_TIMEOUT_MS=10200U
    #-D CONFIG_DEBUG_SERIAL_BAUD=500000U
	#-D CONFIG_COM_SERIAL_SPEED_BAUD=500000U
	#-D CONFIG_COM_SERIAL_TIMEOUT_MS=5U
	#-D CONFIG_DELAY_AFTER_RECEIVE_MS=50U
	#-D CONFIG_CONNECTION_CHECK_INTERVAL_MS=1000U
	#-D CONFIG_NETWORK_CLICK_CHECK_INTERVAL_MS=25U
	#-D CONFIG_ACTUATORS_AUTO_OFF_CHECK_INTERVAL_MS=1000U
	#-D CONFIG_LSH_BENCH
	#-D CONFIG_BENCH_ITERATIONS=1000000U

# --- Base for Release Builds ---
[common_release]
extends = common_base
build_type = release
build_flags = ${common_base.build_flags} -D NDEBUG

# --- Base for Debug Builds ---
[common_debug]
extends = common_base
build_type = debug
build_flags = ${common_base.build_flags} -D LSH_DEBUG

# =================================================================
# |           DEVICE-SPECIFIC FEATURE FLAGS                       |
# |   Add flags here that apply ONLY to a specific device.        |
# =================================================================
[device_J1]
device_feature_flags =
    # J1 is a powerful device, so we enable MsgPack just for it.
    -D CONFIG_MSG_PACK
    -D CONFIG_USE_FAST_CLICKABLES
    -D CONFIG_USE_FAST_ACTUATORS

[device_J2]
device_feature_flags =
    # J2 doesn't use MsgPack but has a custom debounce time.
    -D CONFIG_CLICKABLE_DEBOUNCE_TIME_MS=30U

# ... Add sections for J3, J4, C1, C2 etc. here ...
[device_C1]
device_feature_flags =
    -D CONFIG_MSG_PACK

# =================================================================
# |                  FINAL BUILD ENVIRONMENTS                     |
# | Each environment composes the final set of flags and sources. |
# =================================================================

# --- Device J1 ---
[env:J1_release]
extends = common_release
# Inherit the base filter and add (+) the specific source file for this device.
src_filter = ${common_base.src_filter} +<configs/j1_config.cpp>
build_flags =
    ${common_release.build_flags}        # Inherit common release flags
    ${common_base.default_feature_flags} # Add global default features
    ${device_J1.device_feature_flags}    # Add J1-specific features
    -D LSH_BUILD_J1                      # The selection flag for the preprocessor

[env:J1_debug]
extends = common_debug
src_filter = ${common_base.src_filter} +<configs/j1_config.cpp>
build_flags =
    ${common_debug.build_flags}
    ${common_base.default_feature_flags}
    ${device_J1.device_feature_flags}
    -D LSH_BUILD_J1

# --- Device J2 ---
[env:J2_release]
extends = common_release
build_src_filter = ${common_base.src_filter} +<configs/j2_config.cpp>
build_flags =
    ${common_release.build_flags}
    ${common_base.default_feature_flags}
    ${device_J2.device_feature_flags}
    -D LSH_BUILD_J2

[env:J2_debug]
extends = common_debug
build_src_filter = ${common_base.src_filter} +<configs/j2_config.cpp>
build_flags =
    ${common_debug.build_flags}
    ${common_base.default_feature_flags}
    ${device_J2.device_feature_flags}
    -D LSH_BUILD_J2

# --- HOW TO ADD A NEW DEVICE (e.g., "Garage") ---
# 1. Create the section for its specific feature flags:
# [device_Garage]
# device_feature_flags =
#     -D CONFIG_SOME_GARAGE_ONLY_FEATURE
#
# 2. Create the final build environments by copying an existing block:
# [env:Garage_release]
# extends = common_release
# build_src_filter = ${common_base.src_filter} +<configs/garage_config.cpp>
# build_flags =
#     ${common_release.build_flags}
#     ${common_base.default_feature_flags}
#     ${device_Garage.device_feature_flags}
#     -D LSH_BUILD_GARAGE
#
# [env:Garage_debug]
# extends = common_debug
# build_src_filter = ${common_base.src_filter} +<configs/garage_config.cpp>
# build_flags =
#     ${common_debug.build_flags}
#     ${common_base.default_feature_flags}
#     ${device_Garage.device_feature_flags}
#     -D LSH_BUILD_GARAGE